# -*- coding: utf-8 -*-
"""Transportation Operations Support Specialist Scraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q7MgqR7b3j5qrRxFEq9ZDAWCfvovYPnR
"""

import requests
from bs4 import BeautifulSoup
import math
import pandas as pd
import smtplib
from email.mime.text import MIMEText

sender = "mlyhoops@gmail.com"
recipients = ["mattyamcollege@gmail.com"]
password = ""

l=[]
o={}
k=[]
headers={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36"}
#target_url='https://www.linkedin.com/jobs-guest/jobs/api/seeMoreJobPostings/search?currentJobId=3623217267&distance=25&f_C=37768&f_TPR=r86400&geoId=90000049&keywords=Transportation%20Operations%20Support%20Specialist"&start={}'
target_url='https://www.linkedin.com/jobs-guest/jobs/api/seeMoreJobPostings/search?currentJobId=3756659592&f_C=37768&geoId=90000049&location=Los%20Angeles%20Metropolitan%20Area&start={}'

def send_email(subject, body, sender, recipients, password):
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = sender
    msg['To'] = ', '.join(recipients)
    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp_server:
       smtp_server.login(sender, password)
       smtp_server.sendmail(sender, recipients, msg.as_string())
    print("Message sent!")

for i in range(0,(3)):

    res = requests.get(target_url.format(i))
    soup=BeautifulSoup(res.text,'html.parser')
    alljobs_on_this_page=soup.find_all("li")
    #print(len(alljobs_on_this_page))
    for x in range(0,len(alljobs_on_this_page)):
        jobid = alljobs_on_this_page[x].find("div",{"class":"base-card"}).get('data-entity-urn').split(":")[3]
        l.append(jobid)

def remove_duplicates(input_list):
    unique_list = list(set(input_list))
    return unique_list

l = remove_duplicates(l)


target_url='https://www.linkedin.com/jobs-guest/jobs/api/jobPosting/{}'
for j in range(0,len(l)):

    resp = requests.get(target_url.format(l[j]))
    soup=BeautifulSoup(resp.text,'html.parser')

    try:
        o["company"]=soup.find("div",{"class":"top-card-layout__card"}).find("a").find("img").get('alt')
    except:
        o["company"]=None

    try:
        o["job-title"]=soup.find("div",{"class":"top-card-layout__entity-info"}).find("a").text.strip()
    except:
        o["job-title"]=None

    try:
        o["level"]=soup.find("ul",{"class":"description__job-criteria-list"}).find("li").text.replace("Seniority level","").strip()
    except:
        o["level"]=None



    k.append(o)
    o={}

df = pd.DataFrame(k)
#df.to_csv('linkedinjobs.csv', index=False, encoding='utf-8')

for index, row in df.iterrows():
  subject = row["job-title"] + " Job Open!!!"
  body = "The " + row["job-title"] + " job is open again! Go apply for it! \n https://www.linkedin.com/jobs/search/?currentJobId=3756659592&f_C=37768&geoId=90000049&location=Los%20Angeles%20Metropolitan%20Area&origin=JOB_SEARCH_PAGE_LOCATION_AUTOCOMPLETE&refresh=true"
  #if(row['job-title']==("IT Support Specialist II (White-Glove Support)")):
  if(row['job-title']==("Transportation Operations Support Specialist")):
    print("The job " + row["job-title"] + " is available!")
    send_email(subject, body, sender, recipients, password)
  #else:
  #  print("Keep Waiting...")

